{"version":3,"sources":["Components/DrumPad.js","Components/PadBank.js","App.js","reportWebVitals.js","index.js"],"names":["activeStyle","backgroundColor","boxShado","height","marginTop","inactiveStyle","DrumPad","props","state","padStyle","playSound","bind","handleKeyPress","activatePad","document","addEventListener","this","removeEventListener","e","keyCode","power","setState","boxShadow","sound","getElementById","keyTrigger","currentTime","play","setTimeout","updateDisplay","clipId","replace","className","id","onClick","style","src","clip","Component","PadBank","padBank","currentPadBank","map","drumObj","i","padBankArr","url","bankOne","bankTwo","App","display","String","fromCharCode","currentPadBankId","sliderVal","displayClipName","selectBank","adjustVolume","powerControl","clearDisplay","name","target","value","Math","round","powerSlider","float","bankSlider","slice","call","getElementsByClassName","forEach","volume","clipVolume","max","min","onChange","step","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qOAEMA,EAAc,CAChBC,gBAAiB,SACjBC,SAAU,eACVC,OAAQ,GACRC,UAAW,IAGTC,EAAgB,CAClBJ,gBAAiB,OACjBG,UAAW,GACXF,SAAU,qBAiFCI,E,kDA7EX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACGC,MAAQ,CACTC,SAAUJ,GAEd,EAAKK,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAPT,E,qDASlB,WACIG,SAASC,iBAAiB,UAAWC,KAAKJ,kB,kCAE9C,WACIE,SAASG,oBAAoB,UAAWD,KAAKJ,kB,4BAGjD,SAAeM,GACPA,EAAEC,UAAYH,KAAKT,MAAMY,SACzBH,KAAKN,c,yBAIb,WACQM,KAAKT,MAAMa,MAC6B,WAAxCJ,KAAKR,MAAMC,SAASR,gBACpBe,KAAKK,SAAS,CACdZ,SAAUJ,IAGVW,KAAKK,SAAS,CACdZ,SAAUT,IAG+B,KAAlCgB,KAAKR,MAAMC,SAASL,UAC/BY,KAAKK,SAAS,CACVZ,SAAUJ,IAGdW,KAAKK,SAAS,CACVZ,SAAU,CACVN,OAAQ,GACRC,UAAW,GACXH,gBAAiB,OACjBqB,UAAW,kB,uBAMnB,WAAa,IAAD,OACFC,EAAQT,SAASU,eAAeR,KAAKT,MAAMkB,YACjDF,EAAMG,YAAc,EACpBH,EAAMI,OACNX,KAAKH,cACLe,YAAW,kBAAM,EAAKf,gBAAe,KACrCG,KAAKT,MAAMsB,cAAcb,KAAKT,MAAMuB,OAAOC,QAAQ,KAAM,Q,oBAE7D,WACI,OACI,sBACIC,UAAU,WACVC,GAAIjB,KAAKT,MAAMuB,OACfI,QAASlB,KAAKN,UACdyB,MAAOnB,KAAKR,MAAMC,SAJtB,UAOI,uBACIuB,UAAU,OACVC,GAAIjB,KAAKT,MAAMkB,WACfW,IAAKpB,KAAKT,MAAM8B,OAEnBrB,KAAKT,MAAMkB,kB,GAxENa,aCkBPC,G,uDA1BX,WAAYhC,GAAO,uCACTA,G,0CAEV,WAAU,IACFiC,EADC,OAeL,OAbIxB,KAAKT,MAAMa,QACXoB,EAAUxB,KAAKT,MAAMkC,eAAeC,KAAI,SAACC,EAASC,EAAGC,GACjD,OACI,cAAC,EAAD,CACIR,KAAMQ,EAAWD,GAAGE,IACpB3B,QAAS0B,EAAWD,GAAGzB,QACvBM,WAAYoB,EAAWD,GAAGnB,WAC1BL,MAAO,EAAKb,MAAMa,MAClBS,cAAe,EAAKtB,MAAMsB,oBAMtC,qBAAKG,UAAU,WAAf,SACKQ,Q,GArBKF,cCDhBS,EAAU,CACd,CACE5B,QAAS,GACTM,WAAY,IACZQ,GAAI,WACJa,IAAK,4DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,WACJa,IAAK,4DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,WACJa,IAAK,4DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,WACJa,IAAK,8DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,OACJa,IAAK,4DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,UACJa,IAAK,0DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,cACJa,IAAK,8DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,OACJa,IAAK,8DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,YACJa,IAAK,2DAIHE,EAAU,CACd,CACE7B,QAAS,GACTM,WAAY,IACZQ,GAAI,UACJa,IAAK,2DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,UACJa,IAAK,2DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,UACJa,IAAK,2DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,SACJa,IAAK,mEAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,UACJa,IAAK,2DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,YACJa,IAAK,0DAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,cACJa,IAAK,iEAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,aACJa,IAAK,gEAEP,CACE3B,QAAS,GACTM,WAAY,IACZQ,GAAI,QACJa,IAAK,4DAgIMG,E,kDA3HX,WAAY1C,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTY,OAAO,EACP8B,QAASC,OAAOC,aAAa,KAC7BX,eAAgBM,EAChBM,iBAAkB,aAClBC,UAAW,IAEf,EAAKC,gBAAkB,EAAKA,gBAAgB5C,KAArB,gBACvB,EAAK6C,WAAa,EAAKA,WAAW7C,KAAhB,gBAClB,EAAK8C,aAAe,EAAKA,aAAa9C,KAAlB,gBACpB,EAAK+C,aAAe,EAAKA,aAAa/C,KAAlB,gBACpB,EAAKgD,aAAe,EAAKA,aAAahD,KAAlB,gBAbN,E,gDAgBlB,WACIK,KAAKK,SAAS,CACVD,OAAQJ,KAAKR,MAAMY,MACnB8B,QAASC,OAAOC,aAAa,S,wBAGrC,WACQpC,KAAKR,MAAMY,QACyB,eAAhCJ,KAAKR,MAAM6C,iBACXrC,KAAKK,SAAS,CACVoB,eAAgBO,EAChBE,QAAS,mBACTG,iBAAkB,oBAGtBrC,KAAKK,SAAS,CACVoB,eAAgBM,EAChBG,QAAS,aACTG,iBAAkB,kB,6BAMlC,SAAgBO,GACR5C,KAAKR,MAAMY,OACXJ,KAAKK,SAAS,CACV6B,QAASU,M,0BAKrB,SAAa1C,GAAG,IAAD,OACPF,KAAKR,MAAMY,QACXJ,KAAKK,SAAS,CACViC,UAAWpC,EAAE2C,OAAOC,MACpBZ,QAAS,WAAaa,KAAKC,MAAuB,IAAjB9C,EAAE2C,OAAOC,SAE9ClC,YAAW,kBAAM,EAAK+B,iBAAgB,Q,0BAI9C,WACI3C,KAAKK,SAAS,CACV6B,QAASC,OAAOC,aAAa,S,oBAGrC,WAAS,IAAD,OACEa,EAAcjD,KAAKR,MAAMY,MACzB,CACE8C,MAAO,SAET,CACEA,MAAO,QAEPC,EAAanD,KAAKR,MAAMiC,iBAAmBM,EAC7C,CACEmB,MAAO,QAET,CACEA,MAAO,SAQb,MALgB,GAAGE,MAAMC,KAAKvD,SAASwD,uBAAuB,SACtDC,SAAS,SAAAhD,GACVA,EAAMiD,OAAS,EAAKhE,MAAM8C,aAI/B,sBAAKtB,UAAU,kBAAkBC,GAAG,eAApC,UACQ,cAAC,EAAD,CACIwC,WAAczD,KAAKR,MAAM8C,UACzBb,eAAkBzB,KAAKR,MAAMiC,eAC7BrB,MAAOJ,KAAKR,MAAMY,MAClBS,cAAeb,KAAKuC,kBAExB,oCAAOJ,OAAOC,aAAd,OACA,sBAAKpB,UAAU,qBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,sCACA,qBAAKA,UAAU,SAASE,QAASlB,KAAK0C,aAAtC,SACI,qBAAK1B,UAAU,QAAQG,MAAO8B,SAGtC,mBAAGhC,GAAG,UAAN,SAAiBjB,KAAKR,MAAM0C,UAC5B,qBAAKlB,UAAU,gBAAf,SACI,uBACI0C,IAAI,IACJC,IAAI,IACJC,SAAU5D,KAAKyC,aACfoB,KAAK,OACLC,KAAK,QACLhB,MAAO9C,KAAKR,MAAM8C,cAG1B,sBAAKtB,UAAU,UAAf,UACI,qCACA,qBAAKA,UAAU,SAASE,QAASlB,KAAKwC,WAAtC,SACI,qBAAKxB,UAAU,QAAQG,MAAOgC,mB,GAnH5C7B,aC3GHyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5E,SAASU,eAAe,SAM1BuD,K","file":"static/js/main.588ad8b5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst activeStyle = {\n    backgroundColor: 'orange',\n    boxShado: '0 3px orange',\n    height: 77,\n    marginTop: 13\n};\n\nconst inactiveStyle = {\n    backgroundColor: 'grey',\n    marginTop: 10,\n    boxShado: '3px 3px 5px black'\n};\n\nclass DrumPad extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n                padStyle: inactiveStyle\n            };\n            this.playSound = this.playSound.bind(this);\n            this.handleKeyPress = this.handleKeyPress.bind(this);\n            this.activatePad = this.activatePad.bind(this);\n    }\n    componentDidMount(){\n        document.addEventListener('keydown', this.handleKeyPress);\n    }\n    componentWillUnmount(){\n        document.removeEventListener('keydown', this.handleKeyPress);\n    }\n    \n    handleKeyPress(e){\n        if (e.keyCode === this.props.keyCode){\n            this.playSound();\n        }\n    }\n    \n    activatePad() {\n        if (this.props.power) {\n        if (this.state.padStyle.backgroundColor === 'orange') {\n            this.setState({\n            padStyle: inactiveStyle\n            });\n        } else {\n            this.setState({\n            padStyle: activeStyle\n            });\n        }\n        } else if (this.state.padStyle.marginTop === 13) {\n        this.setState({\n            padStyle: inactiveStyle\n        });\n        } else {\n        this.setState({\n            padStyle: {\n            height: 77,\n            marginTop: 13,\n            backgroundColor: 'grey',\n            boxShadow: '0 3px grey'\n            }\n        });\n        }\n    }\n        \n    playSound() {\n        const sound = document.getElementById(this.props.keyTrigger);\n        sound.currentTime = 0;\n        sound.play();\n        this.activatePad();\n        setTimeout(() => this.activatePad(), 100);\n        this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n    }\n    render() {\n        return(\n            <div\n                className='drum-pad'\n                id={this.props.clipId}\n                onClick={this.playSound}\n                style={this.state.padStyle}\n                >\n                \n                <audio \n                    className='clip'\n                    id={this.props.keyTrigger}\n                    src={this.props.clip}\n                />\n                {this.props.keyTrigger}\n            </div>\n        );\n    }\n};\n\nexport default DrumPad;\n","import React, { Component } from 'react';\nimport DrumPad from './DrumPad';\nimport '../App.css';\n\n\n\nclass PadBank extends Component {\n    constructor(props){\n        super(props);\n    }\n    render() {\n        let padBank;\n        if (this.props.power){\n            padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n                return(\n                    <DrumPad\n                        clip={padBankArr[i].url}\n                        keyCode={padBankArr[i].keyCode}\n                        keyTrigger={padBankArr[i].keyTrigger}\n                        power={this.props.power}\n                        updateDisplay={this.props.updateDisplay}\n                    />\n                );\n            });\n        }\n        return(\n            <div className=\"pad-bank\">\n                {padBank}\n            </div>\n        );\n    }\n};\n\nexport default PadBank;\n","import React, { Component } from 'react';\nimport PadBank from './Components/PadBank';\nimport './App.css';\n\n\nconst bankOne = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  }\n];\n\nconst bankTwo = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Chord-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n  },\n  {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Chord-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n  },\n  {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Chord-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n  },\n  {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Shaker',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n  },\n  {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n  },\n  {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n  },\n  {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: 'Punchy-Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n  },\n  {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Side-Stick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n  },\n  {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Snare',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n  }\n];\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            power: true,\n            display: String.fromCharCode(160),\n            currentPadBank: bankOne,\n            currentPadBankId: 'Heater Kit',\n            sliderVal: 0.3\n        };\n        this.displayClipName = this.displayClipName.bind(this);\n        this.selectBank = this.selectBank.bind(this);\n        this.adjustVolume = this.adjustVolume.bind(this);\n        this.powerControl = this.powerControl.bind(this);\n        this.clearDisplay = this.clearDisplay.bind(this);\n    }\n    \n    powerControl(){\n        this.setState({\n            power: !this.state.power,\n            display: String.fromCharCode(160)\n        });\n    }\n    selectBank() {\n        if (this.state.power){\n            if (this.state.currentPadBankId === 'Heater Kir'){\n                this.setState({\n                    currentPadBank: bankTwo,\n                    display: 'Smooth Piano Kit',\n                    currentPadBankId: 'Smoot Piano Kit'\n                });\n            } else {\n                this.setState({\n                    currentPadBank: bankOne,\n                    display: 'Heater Kit',\n                    currentPadBankId: 'Heater Kit'\n                });\n            }\n        }\n    }\n    \n    displayClipName(name){\n        if (this.state.power) {\n            this.setState({\n                display: name\n            });\n        }\n    }\n    \n    adjustVolume(e){\n        if (this.state.power){\n            this.setState({\n                sliderVal: e.target.value,\n                display: 'Volume: ' + Math.round(e.target.value * 100)\n            });\n            setTimeout(() => this.clearDisplay(), 1000);\n        }\n    }\n    \n    clearDisplay(){\n        this.setState({\n            display: String.fromCharCode(160)\n        });\n    }\n    render(){\n        const powerSlider = this.state.power\n            ? {\n                float: 'right'\n            }\n            : {\n                float: 'left'\n            };\n          const bankSlider = this.state.currentPadBank === bankOne\n            ? {\n                float: 'left'\n            }\n            : {\n                float: 'right'\n            };\n         {\n             const clip = [].slice.call(document.getElementsByClassName('clip'));\n             clip.forEach( sound => {\n                 sound.volume = this.state.sliderVal;\n            });\n        }\n          return (\n            <div className=\"inner-container\" id=\"drum-machine\">\n                    <PadBank \n                        clipVolume = {this.state.sliderVal}\n                        currentPadBank = {this.state.currentPadBank}\n                        power={this.state.power}\n                        updateDisplay={this.displayClipName}\n                    />\n                    <div> {String.fromCharCode} </div>\n                    <div className=\"controls-container\">\n                        <div className=\"control\">\n                            <p>Power</p>\n                            <div className=\"select\" onClick={this.powerControl}>\n                                <div className=\"inner\" style={powerSlider} />\n                            </div>\n                        </div>\n                        <p id='display'>{this.state.display}</p>\n                        <div className=\"volume-slider\">\n                            <input \n                                max=\"1\"\n                                min=\"0\"\n                                onChange={this.adjustVolume}\n                                step='0.01'\n                                type='range'\n                                value={this.state.sliderVal}\n                            />\n                        </div>\n                        <div className=\"control\">\n                            <p>Bank</p>\n                            <div className=\"select\" onClick={this.selectBank}>\n                                <div className=\"inner\" style={bankSlider} />\n                            </div>\n                        </div>\n                    </div>\n            </div>\n        );\n    }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}